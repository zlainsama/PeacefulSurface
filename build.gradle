plugins {
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

import net.minecraftforge.gradle.common.tasks.SignJar

import java.nio.file.Files

version = "1.19.2-v1"
group = "lain.mods.peacefulsurface"
archivesBaseName = "PeacefulSurface"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.19.2'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://www.cursemaven.com' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.0.0'

    implementation fg.deobf("curse.maven:enhancedcelestials-438447:3895339")
}

processResources {
    from 'LICENSE.txt'
}

jar {
    manifest {
        attributes(["Specification-Title"     : "PeacefulSurface",
                    "Specification-Vendor"    : "zlainsama",
                    "Specification-Version"   : "1",
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : "${version}",
                    "Implementation-Vendor"   : "zlainsama",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}

jar.finalizedBy('reobfJar')

task signJar(type: SignJar, dependsOn: jar) {
    onlyIf {
        System.getenv('SIGNJAR_KEYSTORE') != null
    }

    if (System.getenv('SIGNJAR_KEYSTORE') != null) {
        keyStore = Files.createTempFile(getTemporaryDir().toPath(), 'keystore-', '.jks').toString()
        file(keyStore).withOutputStream { output ->
            output.write(Base64.getDecoder().decode(System.getenv('SIGNJAR_KEYSTORE')))
        }
        alias = System.getenv('SIGNJAR_ALIAS')
        storePass = System.getenv('SIGNJAR_STOREPASS')
        keyPass = System.getenv('SIGNJAR_KEYPASS')
        inputFile = jar.archivePath
        outputFile = jar.archivePath
    }

    doLast {
        delete keyStore
    }
}

build.dependsOn signJar
